class Solution {
    public int longestValidParentheses(String s) {

        int n = s.length();
        int res = 0;
        int left = -1;
        Stack<Integer> stk = new Stack<>();
        for(int i=0; i<n; i++)
        {
            if(s.charAt(i) == '(')
            {
                stk.push(i);
            }
            else
            {
                if(stk.isEmpty())
                {
                    left = i;
                }
                if(!stk.isEmpty())
                {
                    stk.pop();
                    if(stk.isEmpty())
                    {
                        res = Math.max(res, i-left);
                    }
                    else
                    {
                        res = Math.max(res, i-stk.peek());
                    }
                }
            }
           
        }

        return res;
        
    }
}
