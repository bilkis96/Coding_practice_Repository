
class Solution {
    public int rob(int[] nums) {
        
        int n = nums.length;
        int[] dp = new int[n+3];
        int max = 0;
        if(n<=3)
        {
            for(int i=0; i<n; i++)
            {
                max= Math.max(max,nums[i]);
            }
        }
        for(int i=2; i<n-1; i++)
        {
            dp[0] = nums[0];
            dp[1] = Math.max(nums[0],nums[1]);
            dp[i] = Math.max(dp[i-1], dp[i-2]+nums[i]);
            max= Math.max(max, dp[i]);
        }

         for(int i=3; i<n; i++)
        {
            dp[0] = nums[1];
            dp[1] = Math.max(nums[1],nums[2]);
            dp[i-1] = Math.max(dp[i-2], dp[i-3]+nums[i]);
            max= Math.max(max, dp[i-1]);
        }

         for(int i=3; i<n; i++)
        {
            dp[0] = nums[1];
            dp[1] = Math.max(nums[1],nums[2]);
            dp[i-1] = Math.max(dp[i-2], dp[i-3]+nums[i]);
            max= Math.max(max, dp[i-1]);
        }

        return max;

    }
}
