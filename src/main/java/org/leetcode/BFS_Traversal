/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {

        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> res = new ArrayList<>();
        if(root == null)
        {
            return res;
        }
        queue.add(root);
        while(!queue.isEmpty())
        {
            int cnt = queue.size();
            List<Integer> level = new ArrayList<>();
            for(int i=0; i<cnt; i++)
            {
                TreeNode tempNode = queue.poll();
                level.add(tempNode.val);
                if(tempNode.left != null)
                {
                    queue.add(tempNode.left);
                }

                if(tempNode.right != null)
                {
                    queue.add(tempNode.right);
                }
            }

            res.add(level);
        
        }
        

        return res;
        
    }

}
